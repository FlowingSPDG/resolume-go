openapi: 3.0.1
info:
  title: Arena & Avenue REST API
  description:  This is the API reference for the Resolume Arena & Avenue REST API. To use this API, start Resolume Arena or Avenue and enable the
                server under the 'Webserver' heading in the preferences.
  contact:
    email: support@resolume.com
  version: 0.0.1
servers:
- url: /api/v1
tags:
- name: api
  description: Retrieve information about the API itself
- name: sources
  description: Retrieve information on the available sources
- name: effects
  description: Retrieve information on the available effects
- name: composition
  description: Retrieve and update all composition properties
- name: column
  description: Retrieve and update column properties
- name: layer
  description: Retrieve and update layer properties and the clips they contain
- name: layergroup
  description: Retrieve and update layer group properties and the layers they contain
- name: deck
  description: Retrieve and update deck properties
- name: clip
  description: Retrieve and update properties for clips and their effects
paths:
  /product:
    get:
      tags:
      - api
      summary: Retrieve product information
      description: This contains the product name and version information
      operationId: get_product
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
  /effects:
    get:
      tags:
      - effects
      summary: Retrieve available effects for clips
      description: Retrieve all effects available for using on clips, layer(group)s and the composition
      operationId: get_effects
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Effects'
  /sources:
    get:
      tags:
      - sources
      summary: Retrieve available sources for clips
      description: Retrieve all sources available to generate clips
      operationId: get_sources
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sources'
  /parameter/by-id/{parameter-id}:
    parameters:
    - name: parameter-id
      in: path
      description: The unique id of the parameter to work with
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - composition
      summary: Retrieve a parameter given its unique id
      description: Given the unique id, get all properties for a single parameter
      operationId: get_parameter_by_id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/StringParameter'
                  - $ref: '#/components/schemas/TextParameter'
                  - $ref: '#/components/schemas/BooleanParameter'
                  - $ref: '#/components/schemas/IntegerParameter'
                  - $ref: '#/components/schemas/ColorParameter'
                  - $ref: '#/components/schemas/RangeParameter'
                  - $ref: '#/components/schemas/ChoiceParameter'
        404:
          description: The given parameter ID is invalid.
          content: {}
    put:
      tags:
      - composition
      summary: Update a parameter given its unique id
      description: Given the unique id, update a single parameter
      operationId: set_parameter_by_id
      requestBody:
        description: The parameter properties to set
        content:
          application/json:
            schema:
                oneOf:
                  - $ref: '#/components/schemas/StringParameter'
                  - $ref: '#/components/schemas/TextParameter'
                  - $ref: '#/components/schemas/BooleanParameter'
                  - $ref: '#/components/schemas/IntegerParameter'
                  - $ref: '#/components/schemas/ColorParameter'
                  - $ref: '#/components/schemas/RangeParameter'
                  - $ref: '#/components/schemas/ChoiceParameter'
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given parameter ID is invalid.
          content: {}
  /parameter/by-id/{parameter-id}/reset:
    parameters:
    - name: parameter-id
      in: path
      description: The unique id of the parameter to work with
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - composition
      summary: Reset a parameter
      description: Reset the parameter with the matching unique id
      operationId: reset_parameter_by_id
      requestBody:
        description: Options used for resetting the parameter, e.g. whether to reset animation
        content:
          application/json:
            schema:
              type: object
              properties:
                resetanimation:
                  description: Whether or not to also reset the animation
                  type: boolean
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given parameter ID is invalid.
          content: {}
  /composition:
    get:
      tags:
      - composition
      summary: Retrieve the complete composition
      description: This contains the composition properties, all the decks, layers
        and clips
      operationId: list_composition
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composition'
    put:
      tags:
      - composition
      summary: Update the complete composition
      description: This allows for updating all parameters in a composition, its decks,
        layers and clips
      operationId: replace_composition
      requestBody:
        description: The updated composition properties, with possible decks, layers
          and/or clips
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composition'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
  /composition/action:
    post:
      tags:
      - composition
      summary: Undo or redo previously executed actions
      description: With this call an action can be either undone, or an action that was undone
        can be executed again
      operationId: composition_action
      requestBody:
        description: Indicate whether you want to undo- or redo an action
        content:
          text/plain:
            schema:
              description: Undo or redo the last action
              type: string
              enum: [undo, redo]
      x-codegen-request-body-name: execute-action
      responses:
        204:
          description: OK
        400:
          description: An invalid action was sent.
          content: {}
        404:
          description: Action cannot be executed because a file is not found
          content: {}
        412:
          description: A precondition failed, the action cannot be executed
          content: {}
  /composition/disconnect-all:
    post:
      tags:
      - composition
      summary: Disconnect all clips in the composition
      description: Any connected clip will be disconnected
      operationId: composition_disconnect_all
      responses:
        204:
          description: OK
  /composition/effects/by-id/{effect-id}/set-display-name:
    parameters:
    - name: effect-id
      in: path
      description: The unique id of the effect to change the name for
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - composition
      - effects
      summary: Change the display name of an effect
      description: Change the display name of the effect with the matching unique id
      operationId: effect_set_display_name_by_id
      requestBody:
        description: The new display name for the effect
        content:
          text/plain:
            schema:
              type: string
      x-codegen-request-body-name: effect-display-name
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/effects/video/move:
    post:
      tags:
      - composition
      summary: Move an effect to the end of the composition
      description: Take an existing effect instance, and move it to the end of the composition
      operationId: move_effect_composition
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/effects/video/move/{offset}:
    parameters:
    - name: offset
      in: path
      description: The offset at which to insert the effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - composition
      summary: Move an effect to the end of the composition
      description: Take an existing effect instance, and move it to the index inside the composition
      operationId: move_effect_composition_offset
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/effects/video/add:
    post:
      tags:
      - composition
      summary: Add an effect to the entire composition
      description: Add a global effect, which affects everything within the composition
      operationId: add_effect_composition
      requestBody:
        description: The effect to add to the composition
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: composition-add-effect
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/effects/video/add/{offset}:
    parameters:
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - composition
      summary: Add an effect to the entire composition
      description: Add a global effect, which affects everything within the composition
      operationId: add_composition_effect_offset
      requestBody:
        description: The effect to add to the composition
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: composition-add-effect-offset
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification or incorrect offset
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/effects/video/{offset}:
    parameters:
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - composition
      summary: Remove an effect from the entire composition
      description: Remove a global effect, which affects everything within the composition
      operationId: delete_composition_effect
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/{parameter}/reset:
    parameters:
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - composition
      summary: Reset a parameter in the composition to its default value.
      description: This resets a parameter on the main composition to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_composition_param
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given parameter does not exist
          content: {}
  /composition/columns/{column-index}:
    parameters:
    - name: column-index
      in: path
      description: Column index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - column
      summary: Retrieve column properties by index
      description: Returns a single column
      operationId: get_column
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
        404:
          description: The requested column does not exist
          content: {}
    put:
      tags:
      - column
      summary: Update specific column by index
      description: Update a single column
      operationId: replace_column
      requestBody:
        description: The updated column properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested column or parameter does not exist
          content: {}
    delete:
      tags:
      - column
      summary: Remove a column by index
      description: Remove the column with the given index
      operationId: delete_column
      responses:
        204:
          description: OK
        404:
          description: The requested column does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/columns/{column-index}/duplicate:
    parameters:
    - name: column-index
      in: path
      description: Column index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - column
      summary: Duplicate the given column
      description: Take the given column and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new column is
        inserted into the composition next to the existing one.
      operationId: composition_duplicate_column
      responses:
        204:
          description: OK
        404:
          description: The requested column does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/columns/add:
    post:
      tags:
      - column
      summary: Add a new column to the composition
      description: This adds a new column either at the end, or somewhere else in the composition
      operationId: composition_add_column
      requestBody:
        description: The existing column to add the new column before, if not given,
          the new column will be added at the end
        content:
          text/plain:
            schema:
              type: string
            examples:
              column-by-position:
                value: "/composition/columns/3"
              column-by-id:
                value: "/composition/columns/by-id/1658311520090"
              layer-group-column:
                value: "/composition/layergroups/1/columns/2"
      x-codegen-request-body-name: column-add
      responses:
        204:
          description: OK
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/columns/{column-index}/{parameter}/reset:
    parameters:
    - name: column-index
      in: path
      description: Column index to reset parameter on (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - column
      summary: Reset a parameter in a column to its default value.
      description: This resets a parameter on the indexed column to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_column_param
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given column or parameter does not exist
          content: {}
  /composition/columns/{column-index}/connect:
    parameters:
    - name: column-index
      in: path
      description: Column index to connect (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - column
      summary: Connect the column by index
      description: Connect the column, possibly activating it
      operationId: column_connect
      requestBody:
        description: Whether to connect the column. This is analogous to whether the mouse is
          pressed down on the column. If omitted, true and false are both send - as if a short
          click was generated
        content:
          application/json:
            schema:
              type: boolean
      responses:
        204:
          description: OK
        404:
          description: The requested column does not exist
          content: {}
  /composition/columns/{column-index}/select:
    parameters:
    - name: column-index
      in: path
      description: Column index to select (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - column
      summary: Select the column by its position in the clip grid
      description: Select the column
      operationId: column_select
      responses:
        204:
          description: OK
        404:
          description: The requested column does not exist
          content: {}
  /composition/columns/by-id/{column-id}:
    parameters:
    - name: column-id
      in: path
      description: The unique column id
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - column
      - layergroup
      summary: Retrieve column properties by id
      description: Returns a single column, either from the composition or a layer group
      operationId: get_column_by_id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
        404:
          description: The requested column does not exist
          content: {}
    put:
      tags:
      - column
      - layergroup
      summary: Update specific column by id
      description: Update a single column
      operationId: replace_column_by_id
      requestBody:
        description: The updated column properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
        required: true
      responses:
        204:
          description: OK
        404:
          description: The requested column does not exist
          content: {}
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
    delete:
      tags:
      - column
      - layergroup
      summary: Remove specific layer by id
      description: Remove the column with the given id
      operationId: remove_column_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested column does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/columns/by-id/{column-id}/duplicate:
    parameters:
    - name: column-id
      in: path
      description: The unique column id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - column
        - layergroup
      summary: Duplicate the given column
      description: Take the given column and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new column is
        inserted into the composition or layer group next to the existing one.
      operationId: composition_duplicate_column_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested column does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/columns/by-id/{column-id}/{parameter}/reset:
    parameters:
    - name: column-id
      in: path
      description: The unique id of the column to reset parameter on
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - column
      - layergroup
      summary: Reset a parameter in a column to its default value.
      description: This resets a parameter on the indexed column to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_column_param_by_id
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given column or parameter does not exist
          content: {}
  /composition/columns/by-id/{column-id}/connect:
    parameters:
    - name: column-id
      in: path
      description: The unique identifier for the column to connect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - column
      - layergroup
      summary: Connect the column by id
      description: Connect the column, possibly activating it. This works for both regular columns as well as columns inside a layer group
      operationId: column_connect_by_id
      requestBody:
        description: Whether to connect the column. This is analogous to whether the mouse is
          pressed down on the column. If omitted, true and false are both send - as if a short
          click was generated
        content:
          application/json:
            schema:
              type: boolean
      responses:
        204:
          description: OK
        404:
          description: The requested column does not exist
          content: {}
  /composition/columns/by-id/{column-id}/select:
    parameters:
    - name: column-id
      in: path
      description: The unique identifier for the column to select
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - column
      - layergroup
      summary: Select the column by id
      description: Select the column
      operationId: column_select_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested column does not exist
          content: {}
  /composition/layers/{layer-index}:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - layer
      summary: Retrieve layer properties and clip info by index
      description: Returns a single layer and all of its clips
      operationId: get_layer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layer'
        404:
          description: The requested layer does not exist
          content: {}
    put:
      tags:
      - layer
      summary: Update specified layer and/or clips by index
      description: Updates a single layer and all of its clips
      operationId: replace_layer
      requestBody:
        description: The updated layer and/or clip properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layer'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested layer does not exist
          content: {}
    delete:
      tags:
      - layer
      summary: Remove a layer by index
      description: Remove the layer with the given index
      operationId: delete_layer
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layers/{layer-index}/duplicate:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - layer
      summary: Duplicate the given layer
      description: Take the given layer and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new layer is
        inserted into the composition below the existing one.
      operationId: composition_duplicate_layer
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layers/{layer-index}/effects/video/{effect-index}/set-display-name:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: effect-index
      in: path
      description: The index of the video effect within the layer
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      - effects
      summary: Change the display name of an effect
      description: Change the display name of the effect with the given offset in the layer
      operationId: video_effect_set_display_name_layer
      requestBody:
        description: The new display name for the effect
        content:
          text/plain:
            schema:
              type: string
      x-codegen-request-body-name: effect-display-name
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/effects/video/move:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Move an effect to the end of the layer
      description: Take an existing effect instance, and move it to the end of the layer
      operationId: move_effect_layer
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/effects/video/move/{offset}:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Move an effect to the end of the layer
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_layer_offset
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/effects/video/add:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Add an effect to a layer by index
      description: Add an effect to the layer at the specified index
      operationId: add_layer_effect
      requestBody:
        description: The effect to add to the layer
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layer-add-effect
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/effects/video/add/{offset}:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Add an effect to a layer by index, at the given offset
      description: Add an effect to the layer at the specified index
      operationId: layer_add_effect_offset
      requestBody:
        description: The effect to add to the layer
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layer-add-effect-offset
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification or incorrect offset
        404:
          description: The requested layer does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/effects/video/{offset}:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - layer
      summary: Remove an effect from a layer
      description: Remove an effect from a layer
      operationId: delete_layer_effect
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset or the layer does not exist
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/selected:
    get:
      tags:
      - layer
      summary: Retrieve layer properties and clip info for the selected layers
      description: Returns a single layer and all of its clips
      operationId: list_selected_layer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layer'
        404:
          description: No selected layer was found
          content: {}
    put:
      tags:
      - layer
      summary: Update selected layer and/or clips
      description: Updates a single layer and all of its clips
      operationId: replace_selected_layer
      requestBody:
        description: The updated layer and/or clip properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layer'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: No selected layer was found
          content: {}
  /composition/layers/selected/duplicate:
    post:
      tags:
        - layer
      summary: Duplicate the selected layer
      description: Take the selected layer and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new layer is
        inserted into the composition below the existing one.
      operationId: composition_duplicate_selected_layer
      responses:
        204:
          description: OK
        404:
          description: No selected layer was found
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layers/selected/effects/video/add:
    post:
      tags:
      - layer
      summary: Add an effect to the selected layer
      description: Add an effect to the currently selected layer
      operationId: add_effect_selected_layer
      requestBody:
        description: The effect to add to the layer
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: selected-layer-add-effect
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: No selected layer was found
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/selected/effects/video/add/{offset}:
    parameters:
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Add an effect at the given offset to the selected layer
      description: Add an effect at the given offset to the currently selected layer
      operationId: selected_layer_add_effect_offset
      requestBody:
        description: The effect to add to the layer
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: selected-layer-add-effect-offset
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: No selected layer was found
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/selected/effects/video/{offset}:
    parameters:
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - layer
      summary: Remove an effect from a layer
      description: Remove an effect from a layer
      operationId: delete_selected_layer_effect
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset or there is no selected layer
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/{parameter}/reset:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to reset param on (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - layer
      summary: Reset a parameter in a layer to its default value.
      description: This resets a parameter on the indexed layer to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_layer_param
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given layer or parameter does not exist
          content: {}
  /composition/layers/add:
    post:
      tags:
      - layer
      summary: Add a new layer to the composition
      description: This adds a new layer either at the end, or somewhere else in the composition
      operationId: composition_add_layer
      requestBody:
        description: The existing layer to add the new layer before, if not given,
          the new layer will be added at the end
        content:
          text/plain:
            schema:
              type: string
            examples:
              layer-by-position:
                value: "/composition/layers/3"
              layer-by-id:
                value: "/composition/layers/by-id/1658311520090"
      x-codegen-request-body-name: add-layer
      responses:
        204:
          description: OK
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layers/selected/{parameter}/reset:
    parameters:
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - layer
      summary: Reset a parameter in the selected layer to its default value.
      description: This resets a parameter on the selected layer to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_selected_layer_param
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: No selected layer found or parameter does not exist
          content: {}
  /composition/layers/{layer-index}/select:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to select (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Select the layer by index
      description: Select the layer at the given index
      operationId: layer_select
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
  /composition/layers/{layer-index}/clear:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to clear (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Disconnects any playing clips in the layer by index
      description: Disconnects any playing clips in the layer by index
      operationId: layer_clear
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
  /composition/layers/selected/clear:
    post:
      tags:
      - layer
      summary: Disconnects any playing clips in the selected layer
      description: Disconnects any playing clips in the selected layer
      operationId: selected_layer_clear
      responses:
        204:
          description: OK
        404:
          description: Selected layer not found
          content: {}
  /composition/layers/{layer-index}/clearclips:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to clear clips from (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Clears all clips in the layer by index
      description: Clears all clips in the layer by index, removing all tracks and settings from the clips
      operationId: layer_clear_clips
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}          
  /composition/layers/selected/clearclips:
    post:
      tags:
      - layer
      summary: Clears all clips in the selected layer
      description: Clears all clips in the selected layer, removing all tracks and settings from the clips
      operationId: selected_layer_clear_clips
      responses:
        204:
          description: OK
        404:
          description: Selected layer not found
          content: {}          
  /composition/layers/by-id/{layer-id}:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to use
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - layer
      summary: Retrieve layer properties and clip info by id
      description: Returns a single layer and all of its clips
      operationId: get_layer_by_id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layer'
        404:
          description: The requested layer does not exist
          content: {}
    put:
      tags:
      - layer
      summary: Update specified layer and/or clips by id
      description: Updates a single layer and all of its clips
      operationId: replace_layer_by_id
      requestBody:
        description: The updated layer and/or clip properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layer'
        required: true
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
    delete:
      tags:
      - layer
      summary: Remove specified layer by id
      description: Remove the layer with the given id
      operationId: delete_layer_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layers/by-id/{layer-id}/duplicate:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - layer
      summary: Duplicate the given layer
      description: Take the given layer and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new layer is
        inserted into the composition below the existing one.
      operationId: composition_duplicate_layer_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layers/by-id/{layer-id}/effects/video/move:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Move an effect to the end of a layer
      description: Take an existing effect instance, and move it to the end of the layer
      operationId: move_effect_layer_by_id
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/by-id/{layer-id}/effects/video/move/{offset}:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to use
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Move an effect to a specific offset inside the layer
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_layer_offset_by_id
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/by-id/{layer-id}/effects/video/add:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Add an effect to a layer by unique id
      description: Add an effect to the layer with the given unique id
      operationId: add_effect_layer_by_id
      requestBody:
        description: The effect to add to the layer
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layer-add-effect-by-id
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/by-id/{layer-id}/effects/video/add/{offset}:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to use
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Add an effect to the layer with the given id, at the given offset
      description: Add an effect to the layer with the given unique id
      operationId: layer_add_effect_by_id_offset
      requestBody:
        description: The effect to add to the layer
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layer-add-effect-by-id-offset
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification or incorrect offset
        404:
          description: The requested layer does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/by-id/{layer-id}/effects/video/{offset}:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to use
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - layer
      summary: Remove an effect from a layer
      description: Remove an effect from a layer
      operationId: delete_layer_effect_by_id
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset or no matching layer was found
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/by-id/{layer-id}/{parameter}/reset:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to reset param on (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - layer
      summary: Reset a parameter in a layer to its default value.
      description: This resets a parameter on the indexed layer to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_layer_param_by_id
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given layer or parameter does not exist
          content: {}
  /composition/layers/by-id/{layer-id}/select:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to update
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Select the layer by id
      description: Select the layer with the given id
      operationId: layer_select_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
  /composition/layers/by-id/{layer-id}/clear:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to clear
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Disconnects any playing clips in the layer by id
      description: Disconnects any playing clips in the layer by id
      operationId: layer_clear_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
  /composition/layers/by-id/{layer-id}/clearclips:
    parameters:
    - name: layer-id
      in: path
      description: The unique layer id to clear clips from
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Clears all clips in the layer by id
      description: Clears all clips in the layer by id, removing all tracks and settings from the clips
      operationId: layer_clear_clips_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested layer does not exist
          content: {}
  /composition/layergroups/{layergroup-index}:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - layergroup
      summary: Retrieve layer group properties and layer info by index
      description: Returns a single layer group and all of its layers
      operationId: get_layergroup
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerGroup'
        404:
          description: The requested layer group does not exist
          content: {}
    put:
      tags:
      - layergroup
      summary: Update specified layer group and/or layers by index
      description: Updates a single layer group and all of its layers
      operationId: replace_layergroup
      requestBody:
        description: The updated layer group and/or layer properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerGroup'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested layer group does not exist
          content: {}
    delete:
      tags:
      - layergroup
      summary: Remove a layer group by index
      description: Remove the layer group with the given index
      operationId: delete_layer_group
      responses:
        204:
          description: OK
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/{layergroup-index}/clear:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to clear (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Disconnects any playing clips in the layer group by index
      description: Disconnects any playing clips in the layer group by index
      operationId: layer_group_clear
      requestBody:
        description: Whether to clear the layer group. This is analogous to whether the mouse is
          pressed down on the button. If omitted, true and false are both sent - as if a short
          click was generated
        content:
          application/json:
            schema:
              type: boolean
      responses:
        204:
          description: OK
        404:
          description: The requested layer group does not exist
          content: {}
  /composition/layergroups/selected/clear:
    post:
      tags:
      - layergroup
      summary: Disconnects any playing clips in the selected layer group
      description: Disconnects any playing clips in the selected layer group
      operationId: selected_layer_group_clear
      requestBody:
        description: Whether to clear the layer group. This is analogous to whether the mouse is
          pressed down on the button. If omitted, true and false are both sent - as if a short
          click was generated
        content:
          application/json:
            schema:
              type: boolean
      responses:
        204:
          description: OK
        404:
          description: Selected layer not found
          content: {}
  /composition/layergroups/{layergroup-index}/duplicate:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - layergroup
      summary: Duplicate the given layer group
      description: Take the given layer group and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new layer group is
        inserted into the composition below the existing one.
      operationId: composition_duplicate_layer_group
      responses:
        204:
          description: OK
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/{layergroup-index}/move-layer:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - layergroup
      summary: Add an existing layer to an existing layer group
      description: Given an existing layer, identified by the path in the
        body, move it into the layer group at the given position in the
        composition.
      operationId: composition_move_layer_to_group
      requestBody:
        description: The layer to move into the group. This is the path to
          an existing layer, either identifier by position, or by unique id.
        content:
          text/plain:
            schema:
              type: string
            examples:
              layer-by-position:
                value: "/composition/layers/3"
              layer-by-id:
                value: "/composition/layers/by-id/1658311520090"
      x-codegen-request-body-name: move-layer-to-group
      responses:
        204:
          description: OK
        400:
          description: Invalid layer path given.
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/{layergroup-index}/add-layer:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - layergroup
      summary: Add a new layer to an existing layer group
      description: Create a new layer inside a layer group. If the path to
        an existing layer is given, the new layer is inserted before.
      operationId: composition_add_layer_to_group
      requestBody:
        description: The layer to inside the group to place the new layer before.
          This is the path to an existing layer, either identifier by position, or by unique id.
        content:
          text/plain:
            schema:
              type: string
            examples:
              layer-by-position:
                value: "/composition/layers/3"
              layer-by-id:
                value: "/composition/layers/by-id/1658311520090"
      x-codegen-request-body-name: add-layer-to-group
      responses:
        204:
          description: OK
        400:
          description: Invalid layer path given.
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/add:
    post:
      tags:
      - layergroup
      summary: Add a new layer group to the composition
      description: This adds a new layer group either at the end, or somewhere else in the composition
      operationId: composition_add_layergroup
      requestBody:
        description: The existing layer to add the new layer group, if not given,
          a new layer will be created at the end and added to the group, or the
          layer group to add before.
        content:
          text/plain:
            schema:
              type: string
            examples:
              layer-by-position:
                value: "/composition/layers/3"
              layer-by-id:
                value: "/composition/layers/by-id/1658311520090"
              layer-group-by-position:
                value: "/composition/layergroups/2"
              layergroup-by-id:
                value: "/composition/layergroups/by-id/1658387238991"
      x-codegen-request-body-name: add-layer-group
      responses:
        204:
          description: OK
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/{layergroup-index}/effects/video/{effect-index}/set-display-name:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: effect-index
      in: path
      description: The index of the video effect within the layer group
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      - effects
      summary: Change the display name of an effect
      description: Change the display name of the effect with the given offset in the layer group
      operationId: video_effect_set_display_name_layer_group
      requestBody:
        description: The new display name for the effect
        content:
          text/plain:
            schema:
              type: string
      x-codegen-request-body-name: effect-display-name
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/{layergroup-index}/effects/video/move:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Move an effect to the end of the layer group
      description: Take an existing effect instance, and move it to the end of the layer group
      operationId: move_effect_layer_group
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/{layergroup-index}/effects/video/move/{offset}:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Move an effect to the given offset in the layer group
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_layer_group_offset
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/{layergroup-index}/effects/video/add:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Add an effect to a layer group by index
      description: Add an effect to the layer group at the specified index
      operationId: add_effect_layergroup
      requestBody:
        description: The effect to add to the layer group
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layergroup-add-effect
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer group does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/{layergroup-index}/effects/video/add/{offset}:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Add an effect to a layer group by index
      description: Add an effect to the layer group at the specified index
      operationId: layergroup_add_effect_offset
      requestBody:
        description: The effect to add to the layer group
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layergroup-add-effect
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer group does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/{layergroup-index}/effects/video/{offset}:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - layergroup
      summary: Remove an effect from a layer group
      description: Remove an effect from a layer group
      operationId: delete_layer_group_effect
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset or no matching layer group was found
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/{layergroup-index}/columns/{column-index}/connect:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: column-index
      in: path
      description: Column index to connect (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Connect the column in the layergroup by index
      description: Connect the column, possibly activating it
      operationId: layer_group_column_connect
      requestBody:
        description: Whether to connect the column. This is analogous to whether the mouse is
          pressed down on the column. If omitted, true and false are both send - as if a short
          click was generated
        content:
          application/json:
            schema:
              type: boolean
      responses:
        204:
          description: OK
        404:
          description: The requested layer group or column does not exist
          content: {}
  /composition/layergroups/{layergroup-index}/columns/{column-index}/select:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: column-index
      in: path
      description: Column index to select (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Select the column in the layergroup by index
      description: Select the column
      operationId: layer_group_column_select
      responses:
        204:
          description: OK
        404:
          description: The requested layer group or column does not exist
          content: {}
  /composition/layergroups/selected:
    get:
      tags:
      - layergroup
      summary: Retrieve selected layer group properties and layer info
      description: Returns a single layer group and all of its layers
      operationId: list_selected_layergroup
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerGroup'
        404:
          description: No selected layer group was found
          content: {}
    put:
      tags:
      - layergroup
      summary: Update selected layer group and/or layers
      description: Updates a single layer group and all of its layers
      operationId: replace_selected_layergroup
      requestBody:
        description: The updated layer group and/or layer properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerGroup'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: No selected layer group was found
          content: {}
    delete:
      tags:
      - layergroup
      summary: Remove the selected layer group
      description: If a layer group is selected, it will be removed
      operationId: delete_selected_layer_group
      responses:
        204:
          description: OK
        404:
          description: No layer group selected.
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/selected/duplicate:
    post:
      tags:
        - layergroup
      summary: Duplicate the selected layer group
      description: Take the selected layer group and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new layer group is
        inserted into the composition below the existing one.
      operationId: composition_duplicate_selected_layer_group
      responses:
        204:
          description: OK
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/selected/move-layer:
    post:
      tags:
        - layergroup
      summary: Add an existing layer to the selected layer group
      description: Given an existing layer, identified by the path in the
        body, move it into the currently selected layer group.
      operationId: composition_move_layer_to_selected_group
      requestBody:
        description: The layer to move into the group. This is the path to
          an existing layer, either identifier by position, or by unique id.
        content:
          text/plain:
            schema:
              type: string
            examples:
              layer-by-position:
                value: "/composition/layers/3"
              layer-by-id:
                value: "/composition/layers/by-id/1658311520090"
      x-codegen-request-body-name: move-layer-to-group
      responses:
        204:
          description: OK
        400:
          description: Invalid layer path given.
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/selected/add-layer:
    post:
      tags:
        - layergroup
      summary: Add new layer to the selected layer group
      description: Create a new layer inside a layer group. If the path to
        an existing layer is given, the new layer is inserted before.
      operationId: composition_add_layer_to_selected_group
      requestBody:
        description: The layer to inside the group to place the new layer before.
          This is the path to an existing layer, either identifier by position, or by unique id.
        content:
          text/plain:
            schema:
              type: string
            examples:
              layer-by-position:
                value: "/composition/layers/3"
              layer-by-id:
                value: "/composition/layers/by-id/1658311520090"
      x-codegen-request-body-name: add-layer-to-group
      responses:
        204:
          description: OK
        400:
          description: Invalid layer path given.
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/selected/effects/video/add:
    post:
      tags:
      - layergroup
      summary: Add an effect to the selected layer group
      description: Add an effect to the selected layer group
      operationId: add_effect_selected_layergroup
      requestBody:
        description: The effect to add to the layer group
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layergroup-add-effect
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: No selected layer group was found
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/selected/effects/video/add/{offset}:
    parameters:
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Add an effect to the selected layer group
      description: Add an effect to the selected layer group
      operationId: selected_layergroup_add_effect_offset
      requestBody:
        description: The effect to add to the layer group
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layergroup-add-effect-offset
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: No selected layer group was found
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/selected/effects/video/{offset}:
    parameters:
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - layergroup
      summary: Remove an effect from a layer group
      description: Remove an effect from a layer group
      operationId: delete_selected_layer_group_effect
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset or no layer group is selected
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/{layergroup-index}/{parameter}/reset:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to reset param on (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - layergroup
      summary: Reset a parameter in a layer group to its default value.
      description: This resets a parameter on the indexed layer group to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_layer_group_param
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given layer group or parameter does not exist
          content: {}
  /composition/layergroups/selected/{parameter}/reset:
    parameters:
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - layergroup
      summary: Reset a parameter in the selected layer group to its default value.
      description: This resets a parameter on the selected layer group to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_selected_layer_group_param
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: No selected layer group found or parameter does not exist
          content: {}
  /composition/layergroups/{layergroup-index}/select:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to select (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Select the layer group by index
      description: Select the layer group at the given index
      operationId: layergroup_select
      responses:
        204:
          description: OK
        404:
          description: The requested layer group does not exist
          content: {}
  /composition/layergroups/{layergroup-index}/columns/{column-index}:
    parameters:
    - name: layergroup-index
      in: path
      description: Layer group index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: column-index
      in: path
      description: Column index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
        - layergroup
      summary: Retrieve the column inside the layer group
      description: Returns a single column from the requested
        layer group
      operationId: get_layergroup_column
      responses:
        200:
          description: OK
          content:
            /application/json:
              schema:
                $ref: '#/components/schemas/Column'
    post:
      tags:
        - layergroup
      summary: Update layer group column
      description: Update the column inside the specified layer group
        by its position inside the composition
      operationId: replace_layergroup_column
      requestBody:
        description: The updated layer group column properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested layer group or column does not exist
          content: {}
  /composition/layergroups/by-id/{layergroup-id}:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique layer group id to use
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - layergroup
      summary: Retrieve layer group properties and layer info by id
      description: Returns a single layer group and all of its layers
      operationId: get_layergroup_by_id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerGroup'
        404:
          description: The requested layer group does not exist
          content: {}
    put:
      tags:
      - layergroup
      summary: Update specified layer and/or clips by id
      description: Updates a single layer group and all of its layers
      operationId: replace_layergroup_by_id
      requestBody:
        description: The updated layer group and/or layer properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerGroup'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested layer group does not exist
          content: {}
    delete:
      tags:
      - layergroup
      summary: Remove specified layer group by id
      description: Remove the layer group with the given id
      operationId: delete_layergroup_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/by-id/{layergroup-id}/clear:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique layer group id to clear
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layer
      summary: Disconnects any playing clips in the layer group by id
      description: Disconnects any playing clips in the layer group by id
      operationId: layer_group_clear_by_id
      requestBody:
        description: Whether to clear the layer group. This is analogous to whether the mouse is
          pressed down on the button. If omitted, true and false are both sent - as if a short
          click was generated
        content:
          application/json:
            schema:
              type: boolean
      responses:
        204:
          description: OK
        404:
          description: The requested layer group does not exist
          content: {}
  /composition/layergroups/by-id/{layergroup-id}/duplicate:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique layer group id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - layergroup
      summary: Duplicate the given layer group
      description: Take the given layer group and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new layer group is
        inserted into the composition below the existing one.
      operationId: composition_duplicate_layer_group_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/by-id/{layergroup-id}/move-layer:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique layer group id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - layergroup
      summary: Add an existing layer to an existing layer group
      description: Given an existing layer, identified by the path in the
        body, move it into the layer group at the given position in the
        composition.
      operationId: composition_move_layer_to_group_by_id
      requestBody:
        description: The layer to move into the group. This is the path to
          an existing layer, either identifier by position, or by unique id.
        content:
          text/plain:
            schema:
              type: string
            examples:
              layer-by-position:
                value: "/composition/layers/3"
              layer-by-id:
                value: "/composition/layers/by-id/1658311520090"
      x-codegen-request-body-name: move-layer-to-group
      responses:
        204:
          description: OK
        400:
          description: Invalid layer path given.
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/by-id/{layergroup-id}/add-layer:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique layer group id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - layergroup
      summary: Add new layer to an existing layer group
      description: Create a new layer inside a layer group. If the path to
        an existing layer is given, the new layer is inserted before.
      operationId: composition_add_layer_to_group_by_id
      requestBody:
        description: The layer to inside the group to place the new layer before.
          This is the path to an existing layer, either identifier by position, or by unique id.
        content:
          text/plain:
            schema:
              type: string
            examples:
              layer-by-position:
                value: "/composition/layers/3"
              layer-by-id:
                value: "/composition/layers/by-id/1658311520090"
      x-codegen-request-body-name: add-layer-to-group
      responses:
        204:
          description: OK
        400:
          description: Invalid layer path given.
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/layergroups/by-id/{layergroup-id}/effects/video/move:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique layer group id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Move an effect to the end of the layer group
      description: Take an existing effect instance, and move it to the end of the layer group
      operationId: move_effect_layer_group_by_id
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/by-id/{layergroup-id}/effects/video/move/{offset}:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique layer group id to use
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Move an effect to the given offset in the layer group
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_layer_group_offset_by_id
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/by-id/{layergroup-id}/effects/video/add:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique id for the layer group
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Add an effect to a layer group by unique id
      description: Add an effect to the layer group with the given unique id
      operationId: add_effect_layergroup_by_id
      requestBody:
        description: The effect to add to the layer group
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layergroup-add-effect-by-id
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer group does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/by-id/{layergroup-id}/effects/video/add/{offset}:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique id for the layer group
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Add an effect to a layer group by unique id
      description: Add an effect to the layer group with the given unique id
      operationId: layergroup_add_effect_by_id_offset
      requestBody:
        description: The effect to add to the layer group
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: layergroup-add-effect-by-id-offset
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer group does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/by-id/{layergroup-id}/effects/video/{offset}:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique id for the layer group
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - layergroup
      summary: Remove an effect from a layer group
      description: Remove an effect from a layer group
      operationId: delete_layer_group_effect_by_id
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset or no matching layer group is found
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layergroups/by-id/{layergroup-id}/{parameter}/reset:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique layer group id to reset param on (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - layergroup
      summary: Reset a parameter in a layer group to its default value.
      description: This resets a parameter on the indexed layer group to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_layer_group_param_by_id
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given layer group or parameter does not exist
          content: {}
  /composition/layergroups/by-id/{layergroup-id}/select:
    parameters:
    - name: layergroup-id
      in: path
      description: The unique layer group id to select
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - layergroup
      summary: Select the layer group by id
      description: Select the layer group with the given id
      operationId: layergroup_select_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested layer group does not exist
          content: {}
  /composition/decks/{deck-index}:
    parameters:
    - name: deck-index
      in: path
      description: Deck index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - deck 
      summary: Retrieve deck properties by index
      description: Returns a single deck
      operationId: get_deck
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deck'
        404:
          description: The requested deck does not exist
          content: {}
    put:
      tags:
      - deck
      summary: Update specific deck by index
      description: Update a single deck
      operationId: replace_deck
      requestBody:
        description: The updated deck properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deck'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested deck does not exist
          content: {}
    delete:
      tags:
      - deck
      summary: Remove a deck by index
      description: Remove the deck with the given index
      operationId: delete_deck
      responses:
        204:
          description: OK
        404:
          description: The requested deck does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/decks/{deck-index}/duplicate:
    parameters:
    - name: deck-index
      in: path
      description: Deck index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - deck
      summary: Duplicate the given deck
      description: Take the given deck and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new deck is
        inserted into the composition next to the existing one.
      operationId: composition_duplicate_deck
      responses:
        204:
          description: OK
        404:
          description: The requested deck does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked or still loading
          content: {}
  /composition/decks/add:
    post:
      tags:
      - deck
      summary: Add a new deck to the composition
      description: This adds a new deck either at the end, or somewhere else in the composition
      operationId: composition_add_deck
      requestBody:
        description: The existing deck to add the new deck before, if not given,
          the new deck will be added at the end
        content:
          text/plain:
            schema:
              type: string
            examples:
              layer-by-position:
                value: "/composition/decks/3"
              layer-by-id:
                value: "/composition/decks/by-id/1681349832470"
      x-codegen-request-body-name: add-deck
      responses:
        204:
          description: OK
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/decks/{deck-index}/{parameter}/reset:
    parameters:
    - name: deck-index
      in: path
      description: Deck index to reset param on (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - deck
      summary: Reset a parameter in a deck to its default value.
      description: This resets a parameter on the indexed deck to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_deck_param
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given deck or parameter does not exist
          content: {}
  /composition/decks/{deck-index}/select:
    parameters:
    - name: deck-index
      in: path
      description: Deck index to select (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - deck
      summary: Select the deck by index
      description: Select the deck at the given index
      operationId: deck_select
      responses:
        204:
          description: OK
        404:
          description: The requested deck does not exist
          content: {}
  /composition/decks/by-id/{deck-id}:
    parameters:
    - name: deck-id
      in: path
      description: The unique deck id
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - deck 
      summary: Retrieve deck properties by id
      description: Returns a single deck
      operationId: get_deck_by_id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deck'
        404:
          description: The requested deck does not exist
          content: {}
    put:
      tags:
      - deck
      summary: Update specific deck by id
      description: Update a single deck
      operationId: replace_deck_by_id
      requestBody:
        description: The updated deck properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deck'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested deck does not exist
          content: {}
    delete:
      tags:
      - deck
      summary: Remove specified deck by id
      description: Remove the deck with the given id
      operationId: delete_deck_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested deck does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
          content: {}
  /composition/decks/by-id/{deck-id}/duplicate:
    parameters:
    - name: deck-id
      in: path
      description: The unique deck id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - deck
      summary: Duplicate the given deck
      description: Take the given deck and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new deck is
        inserted into the composition next to the existing one.
      operationId: composition_duplicate_deck_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested deck does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked, or still loading
          content: {}
  /composition/decks/by-id/{deck-id}/close:
    parameters:
    - name: deck-id
      in: path
      description: The unique deck id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - deck
      summary: Close the given deck
      description: Take the given deck and close it.
      operationId: composition_close_deck_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested deck does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked, or still loading
          content: {}
  /composition/decks/by-id/{deck-id}/open:
    parameters:
    - name: deck-id
      in: path
      description: The unique deck id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
        - deck
      summary: Re-open the given deck
      description: Take the given deck and open it again.
      operationId: composition_open_deck_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested deck does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked, or still loading
          content: {}
  /composition/decks/by-id/{deck-id}/{parameter}/reset:
    parameters:
    - name: deck-id
      in: path
      description: The unique deck id to reset param on (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - deck
      summary: Reset a parameter in a deck to its default value.
      description: This resets a parameter on the indexed deck to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_deck_param_by_id
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given deck or parameter does not exist
          content: {}
  /composition/decks/by-id/{deck-id}/select:
    parameters:
    - name: deck-id
      in: path
      description: The unique deck id to select
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - deck
      summary: Select the deck by id
      description: Select the deck with the given id
      operationId: deck_select_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested deck does not exist
          content: {}
  /composition/layers/{layer-index}/clips/{clip-index}:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - clip
      summary: Retrieve a clip by its position in the clip grid
      description: Retrieve all clip information and associated effects
      operationId: get_clip_by_position
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clip'
        404:
          description: The requested layer or clip does not exist
          content: {}
    put:
      tags:
      - clip
      summary: Update clip and/or its effects by position in the clip grid
      description: Update a single clip and its effects
      operationId: replace_clip_by_position
      requestBody:
        description: The updated clip and/or effect properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clip'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested layer or clip does not exist
          content: {}
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/{effect-index}/set-display-name:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: effect-index
      in: path
      description: The index of the video effect within the clip
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      - effects
      summary: Change the display name of an effect
      description: Change the display name of the effect with the given offset in the clip
      operationId: video_effect_set_display_name_clip
      requestBody:
        description: The new display name for the effect
        content:
          text/plain:
            schema:
              type: string
      x-codegen-request-body-name: effect-display-name
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/move:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Move an effect to the end of the clip
      description: Take an existing effect instance, and move it to the end of the clip
      operationId: move_effect_clip
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested clip does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/move/{offset}:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Move an effect to the given index in the clip
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_clip_offset
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested clip does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/add:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Add an effect to a clip by its position in the clip grid
      description: Add an effect to a clip at the specified position
      operationId: add_effect_clip
      requestBody:
        description: The effect to add to the clip
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: clip-add-effect
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested clip does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/add/{offset}:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Add an effect to a clip by its position in the clip grid
      description: Add an effect to the clip at the specified position
      operationId: clip_add_effect_offset
      requestBody:
        description: The effect to add to the clip
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: clip-add-effect-offset
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification or incorrect offset
        404:
          description: The requested clip does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/{offset}:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to use (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - clip
      summary: Remove an effect from a clip
      description: Remove an effect from a clip
      operationId: delete_clip_effect
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset or no matching clip is found
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/clips/selected:
    get:
      tags:
      - clip
      summary: Retrieve the selected clip
      description: Retrieve all clip information and associated effects
      operationId: list_selected_clip
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clip'
        404:
          description: No selected clip was found
          content: {}
    put:
      tags:
      - clip
      summary: Update selected clip and/or its effects
      description: Update a single clip and its effects
      operationId: replace_selected_clip
      requestBody:
        description: The updated clip and/or effect properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clip'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: No selected clip was found
          content: {}
  /composition/clips/selected/effects/video/add:
    post:
      tags:
      - clip
      summary: Add an effect to the selected clip
      description: Add an effect to the selected clip
      operationId: add_effect_selected_clip
      requestBody:
        description: The effect to add to the clip
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: selected-clip-add-effect
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: No selected clip was found
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/clips/selected/effects/video/add/{offset}:
    parameters:
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Add an effect to the selected clip
      description: Add an effect to the selected clip
      operationId: selected_clip_add_effect_offset
      requestBody:
        description: The effect to add to the clip
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: selected-clip-add-effect-offset
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification or incorrect offset
        404:
          description: No selected clip was found
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/clips/selected/effects/video/{offset}:
    parameters:
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - clip
      summary: Remove an effect from a clip
      description: Remove an effect from a clip
      operationId: delete_selected_clip_effect
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset or no clip is selected
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/layers/{layer-index}/clips/{clip-index}/{parameter}/reset:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - clip
      summary: Reset a parameter in a clip to its default value.
      description: This resets a parameter on the indexed clip to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_clip_param
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given layer, clip or parameter does not exist
          content: {}
  /composition/clips/selected/{parameter}/reset:
    parameters:
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - clip
      summary: Reset a parameter in the selected clip to its default value.
      description: This resets a parameter on the selected clip to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_selected_clip_param
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: No selected clip was found, or parameter does not exist
          content: {}
  /composition/layers/{layer-index}/clips/{clip-index}/select:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Select the clip by its position in the clip grid
      description: Select the clip
      operationId: clip_select
      responses:
        204:
          description: OK
        404:
          description: The requested layer or clip does not exist
          content: {}
  /composition/layers/{layer-index}/clips/{clip-index}/connect:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Connect the clip by its position in the clip grid
      description: Connect the clip, possibly activating it
      operationId: clip_connect
      requestBody:
        description: Whether to connect the clip. This is analogous to whether the mouse is
          pressed down on the clip. If omitted, true and false are both send - as if a short
          click was generated
        content:
          application/json:
            schema:
              type: boolean
      x-codegen-request-body-name: connect-clip
      responses:
        204:
          description: OK
        404:
          description: The requested layer or clip does not exist
          content: {}
  /composition/clips/selected/connect:
    post:
      tags:
      - clip
      summary: Connect the selected clip
      description: Connect the clip, possibly activating it
      operationId: selected_clip_connect
      requestBody:
        description: Whether to connect the clip. This is analogous to whether the mouse is
          pressed down on the clip. If omitted, true and false are both send - as if a short
          click was generated
        content:
          application/json:
            schema:
              type: boolean
      x-codegen-request-body-name: connect-clip
      responses:
        204:
          description: OK
        404:
          description: No selected clip found
          content: {}
  /composition/layers/{layer-index}/clips/{clip-index}/open:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Loads a file or opens a source into a clip by its position in the clip grid
      description: Loads a file or opens a source into a clip, will retain settings as much as possible
      operationId: clip_open
      requestBody:
        description: |
          The path to the file, in URL format, or a source URL. Special characters are to be encoded using URL-encoding.
          As an example, to open a file with path `/Users/Resolume/file 1.mov` you'd use an URL like `file:///Users/Resolume/file%201.mov`.
          On Windows id'd be something like `file:///C:/Users/Resolume/file%201.mov`. Note that three forward slashes are needed after the
          `file:` part, even on Windows. Opening a source uses the following format: `source:///video/<source name>`, an optional
          preset name can be added, `source:///video/<source name>/<preset id>`
        content:
          text/plain:
            schema:
              type: string
            examples:
              mac-open-file:
                value: "file:///Users/Resolume/file%201.mov"
              windows-open-file:
                value: "file:///C:/Users/Resolume/file%201.mov"
              open-video-source:
                value: "source:///video/Checkered"
              open-video-source-preset:
                value: "source:///video/Checkered/12345"
      x-codegen-request-body-name: clip-open-url
      responses:
        204:
          description: OK
        400:
          description: The given clip URL is invalid
          content: {}
        404:
          description: The requested layer or clip does not exist
          content: {}
        412:
          description: A precondition failed, the clip cannot be loaded
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
  /composition/layers/{layer-index}/clips/{clip-index}/openfile:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Loads file into clip by its position in the clip grid
      description: Loads file into clip, will retain settings as much as possible
      deprecated: true
      operationId: clip_openfile
      requestBody:
        description: |
          The path to the file, in URL format. Right now only the `file` protocol is supported. Special characters
          are to be encoded using URL-encoding. As an example, to open a file with path `/Users/Resolume/file 1.mov`
          you'd use an URL like `file:///Users/Resolume/file%201.mov`. On Windows id'd be something like
          `file:///C:/Users/Resolume/file%201.mov`. Note that three forward slashes are needed after the `file:` part,
          even on Windows.
        content:
          text/plain:
            schema:
              type: string
      x-codegen-request-body-name: clip-file-url
      responses:
        204:
          description: OK
        400:
          description: The given clip URL is invalid
          content: {}
        404:
          description: The requested layer or clip does not exist
          content: {}
        412:
          description: A precondition failed, the clip cannot be loaded
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
  /composition/clips/selected/open:
    post:
      tags:
      - clip
      summary: Loads a file or opens a source into the selected clip
      description: Loads a file or opens a source into a clip, will retain settings as much as possible
      operationId: selected_clip_open
      requestBody:
        description: |
          The path to the file, in URL format, or a source URL. Special characters are to be encoded using URL-encoding.
          As an example, to open a file with path `/Users/Resolume/file 1.mov` you'd use an URL like `file:///Users/Resolume/file%201.mov`.
          On Windows id'd be something like `file:///C:/Users/Resolume/file%201.mov`. Note that three forward slashes are needed after the
          `file:` part, even on Windows. Opening a source uses the following format: `source:///video/<source name>`, an optional
          preset name can be added, `source:///video/<source name>/<preset id>`
        content:
          text/plain:
            schema:
              type: string
            examples:
              mac-open-file:
                value: "file:///Users/Resolume/file%201.mov"
              windows-open-file:
                value: "file:///C:/Users/Resolume/file%201.mov"
              open-video-source:
                value: "source:///video/Checkered"
              open-video-source-preset:
                value: "source:///video/Checkered/12345"
      x-codegen-request-body-name: clip-open-url
      responses:
        204:
          description: OK
        400:
          description: The given clip URL is invalid
          content: {}
        404:
          description: The requested layer or clip does not exist
          content: {}
        412:
          description: A precondition failed, the clip cannot be loaded
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
  /composition/clips/selected/openfile:
    post:
      tags:
      - clip
      summary: Loads file into the selected clip
      description: Loads file into clip, will retain settings as much as possible
      deprecated: true
      operationId: selected_clip_openfile
      requestBody:
        description: |
          The path to the file, in URL format. Right now only the `file` protocol is supported. Special characters
          are to be encoded using URL-encoding. As an example, to open a file with path `/Users/Resolume/file 1.mov`
          you'd use an URL like `file:///Users/Resolume/file%201.mov`. On Windows id'd be something like
          `file:///C:/Users/Resolume/file%201.mov`. Note that three forward slashes are needed after the `file:` part,
          even on Windows.
        content:
          text/plain:
            schema:
              type: string
      x-codegen-request-body-name: clip-file-url
      responses:
        204:
          description: OK
        400:
          description: The given clip URL is invalid
          content: {}
        404:
          description: No selected clip found
          content: {}
        412:
          description: A precondition failed, the clip cannot be loaded
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
  /composition/layers/{layer-index}/clips/{clip-index}/clear:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Clears the clip by its position in the clip grid
      description: Clears the clip, removing all tracks and settings
      operationId: clip_clear
      responses:
        204:
          description: OK
        404:
          description: The requested layer or clip does not exist
          content: {}
  /composition/clips/selected/clear:
    post:
      tags:
      - clip
      summary: Clears the selected clip
      description: Clears the clip, removing all tracks and settings
      operationId: selected_clip_clear
      responses:
        204:
          description: OK
        404:
          description: No selected clip found
          content: {}
  /composition/clips/by-id/{clip-id}:
    parameters:
    - name: clip-id
      in: path
      description: The unique identifier for the clip to use
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - clip
      summary: Retrieve a clip by id
      description: Retrieve all clip information and associated effects
      operationId: get_clip_by_id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clip'
        404:
          description: The requested clip does not exist
          content: {}
    put:
      tags:
      - clip
      summary: Update clip and/or its effects by id
      description: Update a single clip and its effects
      operationId: replace_clip_by_id
      requestBody:
        description: The updated clip and/or effect properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clip'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested clip does not exist
          content: {}
  /composition/clips/by-id/{clip-id}/effects/video/move:
    parameters:
    - name: clip-id
      in: path
      description: The unique clip id to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Move an effect to the end of the clip
      description: Take an existing effect instance, and move it to the end of the clip
      operationId: move_effect_clip_by_id
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested clip does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/clips/by-id/{clip-id}/effects/video/move/{offset}:
    parameters:
    - name: clip-id
      in: path
      description: The unique clip id to use
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Move an effect to the given offset in the clip
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_clip_offset_by_id
      requestBody:
        description: The effect instance to move
        content:
          text/plain:
            schema:
              type: string
            examples:
              composition-effect:
                value: '/composition/effects/video/3'
              layer-effect:
                value: '/composition/layers/1/effects/video/2'
              layer-effect-by-id:
                value: '/composition/layers/by-id/1658311521181/effects/video/1'
              layer-group-effect:
                value: '/composition/layergroups/2/effects/video/1'
              layer-group-effect-by-id:
                value: '/composition/layergroups/by-id/1658311522986/effects/video/7'
              clip-effect:
                value: '/composition/layers/1/clips/5/effects/video/2'
              clip-effect-by-id:
                value: '/composition/clips/by-id/1658311744128/effects/video/5'
              effect-by-id:
                value: 'effects/by-id/1658311809911'
      x-codegen-request-body-name: effect-instantiation-uri
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested layer group does not exist
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/clips/{clip-id}/effects/video/add:
    parameters:
    - name: clip-id
      in: path
      description: The unique identifier for the clip to use
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Add an effect to a clip by its unique identifier
      description: Add an effect to a clip by its unique id
      operationId: add_effect_clip_by_id
      requestBody:
        description: The effect to add to the clip
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: clip-add-effect-by-id
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification
        404:
          description: The requested clip does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/clips/{clip-id}/effects/video/add/{offset}:
    parameters:
    - name: clip-id
      in: path
      description: The unique identifier for the clip to use
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset at which to insert the new effect
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Add an effect to a clip by its unique identifier
      description: Add an effect to the clip with the unique identifier
      operationId: clip_add_effect_offset_by_id
      requestBody:
        description: The effect to add to the clip
        content:
          text/plain:
            schema:
              type: string
            examples:
              blow:
                value: "effect:///video/Blow"
              blow-solid:
                value: "effect:///video/Blow/Solid"
      x-codegen-request-body-name: clip-add-effect-by-id-offset
      responses:
        204:
          description: OK
        400:
          description: Invalid effect or preset specification or incorrect offset
        404:
          description: The requested clip does not exit
          content: {}
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/clips/{clip-id}/effects/video/{offset}:
    parameters:
    - name: clip-id
      in: path
      description: The unique identifier for the clip to use
      required: true
      schema:
        type: integer
        format: int64
    - name: offset
      in: path
      description: The offset of the effect to remove
      required: true
      schema:
        type: integer
        format: int64
    delete:
      tags:
      - clip
      summary: Remove an effect from a clip
      description: Remove an effect from a clip
      operationId: delete_clip_effect_by_id
      responses:
        204:
          description: OK
        404:
          description: No effect found at the given offset or no matching clip is found
        412:
          description: A precondition failed, e.g. the composition is locked
  /composition/clips/{clip-id}/{parameter}/reset:
    parameters:
    - name: clip-id
      in: path
      description: The unique identifier for the clip to reset parameter in
      required: true
      schema:
        type: integer
        format: int64
    - name: parameter
      in: path
      description: Name of the parameter to reset
      required: true
      schema:
        type: string
    post:
      tags:
      - clip
      summary: Reset a parameter in a clip to its default value.
      description: This resets a parameter on the indexed clip to default. If a JSON body
        is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_clip_param_by_id
      requestBody:
        description: Parameter reset options, whether to also reset animations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        required: false
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The given clip or parameter does not exist
          content: {}
  /composition/clips/by-id/{clip-id}/select:
    parameters:
    - name: clip-id
      in: path
      description: Unique id of the clip to select
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Select the clip by id
      description: Select the clip
      operationId: clip_select_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested clip does not exist
          content: {}
  /composition/clips/by-id/{clip-id}/connect:
    parameters:
    - name: clip-id
      in: path
      description: The unique clip idenfier
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Connect the clip by id
      description: Connect the clip, possibly activating it
      operationId: clip_connect_by_id
      requestBody:
        description: Whether to connect the clip. This is analogous to whether the mouse is
          pressed down on the clip. If omitted, true and false are both send - as if a short
          click was generated
        content:
          application/json:
            schema:
              type: boolean
      responses:
        204:
          description: OK
        404:
          description: The requested clip does not exist
          content: {}
  /composition/clips/by-id/{clip-id}/open:
    parameters:
    - name: clip-id
      in: path
      description: The unique clip idenfier
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Loads a file or opens a source into the selected clip
      description: Loads a file or opens a source into a clip, will retain settings as much as possible
      operationId: clip_open_by_id
      requestBody:
        description: |
          The path to the file, in URL format, or a source URL. Special characters are to be encoded using URL-encoding.
          As an example, to open a file with path `/Users/Resolume/file 1.mov` you'd use an URL like `file:///Users/Resolume/file%201.mov`.
          On Windows id'd be something like `file:///C:/Users/Resolume/file%201.mov`. Note that three forward slashes are needed after the
          `file:` part, even on Windows. Opening a source uses the following format: `source:///video/<source name>`, an optional
          preset name can be added, `source:///video/<source name>/<preset id>`
        content:
          text/plain:
            schema:
              type: string
            examples:
              mac-open-file:
                value: "file:///Users/Resolume/file%201.mov"
              windows-open-file:
                value: "file:///C:/Users/Resolume/file%201.mov"
              open-video-source:
                value: "source:///video/Checkered"
              open-video-source-preset:
                value: "source:///video/Checkered/12345"
      x-codegen-request-body-name: clip-open-url
      responses:
        204:
          description: OK
        400:
          description: The given clip URL is invalid
          content: {}
        404:
          description: The requested layer or clip does not exist
          content: {}
        412:
          description: A precondition failed, the clip cannot be loaded
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
  /composition/clips/by-id/{clip-id}/openfile:
    parameters:
    - name: clip-id
      in: path
      description: The unique clip idenfier
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Loads file into clip with the given unique identifier
      description: Loads file into clip, will retain settings as much as possible
      deprecated: true
      operationId: clip_openfile_by_id
      requestBody:
        description: |
          The path to the file, in URL format. Right now only the `file` protocol is supported. Special characters
          are to be encoded using URL-encoding. As an example, to open a file with path `/Users/Resolume/file 1.mov`
          you'd use an URL like `file:///Users/Resolume/file%201.mov`. On Windows id'd be something like
          `file:///C:/Users/Resolume/file%201.mov`. Note that three forward slashes are needed after the `file:` part,
          even on Windows.
        content:
          text/plain:
            schema:
              type: string
      x-codegen-request-body-name: clip-file-url
      responses:
        204:
          description: OK
        400:
          description: The given clip URL is invalid
          content: {}
        404:
          description: The requested clip does not exist
          content: {}
        412:
          description: A precondition failed, the clip cannot be loaded
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
  /composition/clips/by-id/{clip-id}/clear:
    parameters:
    - name: clip-id
      in: path
      description: The unique clip idenfier
      required: true
      schema:
        type: integer
        format: int64
    post:
      tags:
      - clip
      summary: Clears the clip with the given unique id
      description: Clears the clip, removing all tracks and settings
      operationId: clip_clear_by_id
      responses:
        204:
          description: OK
        404:
          description: The requested clip does not exist
          content: {}
  /composition/layers/{layer-index}/clips/{clip-index}/thumbnail:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - clip
      summary: Retrieve the latest thumbnail belonging to the specified clip
      description: Finds the clip at the given position in the grid and retrieves the latest thumbnail
      operationId: list_clip_thumbnail_by_position
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        404:
          description: The requested layer or clip does not exist
          content: {}
    post:
      tags:
      - clip
      summary: Set a custom thumbnail for the specified clip
      description: Finds the clip at the given position in the grid and sets the thumbnail
      operationId: set_clip_thumbnail_by_position
      requestBody:
        description: |
          Either the path to a file to load, or an uploaded file. If using a file path, it must be in URL format.
          Right now only the `file` protocol is supported. Special characters are to be encoded using URL-encoding.
          As an example, to open a thumbnail with path `/Users/Resolume/thumbnail 1.png` you'd use an URL like
          `file:///Users/Resolume/thumbnail%201.png`. On Windows id'd be something like
          `file:///C:/Users/Resolume/thumbnail%201.png`. Note that three forward slashes are needed after the `file:`
          part, even on Windows. The thumbnail file must be in gif, png or jpg format.
        content:
          text/plain:
            schema:
              type: string
            examples:
              mac-open-file:
                value: "file:///Users/Resolume/thumbnail%201.gif"
              windows-open-file:
                value: "file:///C:/Users/Resolume/thumbnail%201.png"
              windows-open-unc:
                value: "file://nas-hostname/Resolume/thumbnail%201.jpg"
              open-video-source:
                value: "source:///video/Checkered"
              open-video-source-preset:
                value: "source:///video/Checkered/12345"
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: The image data to set as thumbnail
                  type: string
                  format: binary
            encoding:
              file:
                contentType: image/png, image/jpeg, image/gif
      x-codegen-request-body-name: clip-file-thumbnail
      responses:
        204:
          description: OK
        400:
          description: The given clip URL is invalid
          content: {}
        404:
          description: The requested clip does not exist
          content: {}
        412:
          description: A precondition failed, the thumbnail cannot be loaded
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
    delete:
      tags:
      - clip
      summary: Revert thumbnail to default for the specified clip
      description: Undo any custom thumbnail selection and revert to the auto-generated thumbnail
      operationId: revert_clip_thumbnail_by_position
      responses:
        204:
          description: OK
        404:
          description: The requested clip does not exist
          content: {}
        412:
          description: A precondition failed, i.e. the composition is locked
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
  /composition/clips/selected/thumbnail:
    get:
      tags:
      - clip
      summary: Retrieve the latest thumbnail belonging to the selected clip
      description: Finds the selected clip and retrieves the latest thumbnail
      operationId: list_selected_clip_thumbnail
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        404:
          description: No selected clip found
          content: {}
    post:
      tags:
      - clip
      summary: Set a custom thumbnail for the selected clip
      description: Finds the selected clip in the grid and sets the thumbnail
      operationId: set_selected_clip_thumbnail
      requestBody:
        description: |
          The path to the file, in URL format. Right now only the `file` protocol is supported. Special characters
          are to be encoded using URL-encoding. As an example, to open a thumbnail with path `/Users/Resolume/thumbnail 1.png`
          you'd use an URL like `file:///Users/Resolume/thumbnail%201.png`. On Windows id'd be something like
          `file:///C:/Users/Resolume/thumbnail%201.png`. Note that three forward slashes are needed after the `file:` part,
          even on Windows. The thumbnail file must be in gif, png or jpg format.
        content:
          text/plain:
            schema:
              type: string
            examples:
              mac-open-file:
                value: "file:///Users/Resolume/thumbnail%201.gif"
              windows-open-file:
                value: "file:///C:/Users/Resolume/thumbnail%201.png"
              windows-open-unc:
                value: "file://nas-hostname/Resolume/thumbnail%201.jpg"
              open-video-source:
                value: "source:///video/Checkered"
              open-video-source-preset:
                value: "source:///video/Checkered/12345"
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: The image data to set as thumbnail
                  type: string
                  format: binary
            encoding:
              file:
                contentType: image/png, image/jpeg, image/gif
      x-codegen-request-body-name: clip-file-thumbnail
      responses:
        204:
          description: OK
        400:
          description: The given clip URL is invalid
          content: {}
        404:
          description: No selected clip found
          content: {}
        412:
          description: A precondition failed, the thumbnail cannot be loaded
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
    delete:
      tags:
      - clip
      summary: Revert thumbnail to default for the selected clip
      description: Undo any custom thumbnail selection and revert to the auto-generated thumbnail
      operationId: revert_selected_clip_thumbnail
      responses:
        204:
          description: OK
        404:
          description: No selected clip found
          content: {}
        412:
          description: A precondition failed, i.e. the composition is locked
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
  /composition/layers/{layer-index}/clips/{clip-index}/thumbnail/{last-updated}:
    parameters:
    - name: layer-index
      in: path
      description: Layer index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: clip-index
      in: path
      description: Clip index to retrieve (1-based)
      required: true
      schema:
        type: integer
        format: int64
    - name: last-updated
      in: path
      description: Last updated timestamp for the clip thumbnail. If given, must match the timestamp of the current thumbnail.
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - clip
      summary: Retrieve the latest thumbnail belonging to the specified clip
      description: Finds the clip at the given position in the grid and retrieves the thumbnail if the thumbnail was last updated at the given timestamp
      operationId: get_clip_thumbnail_by_position_and_timestamp
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        404:
          description: The requested layer or clip does not exist, or the timestamp does not match last update
          content: {}
  /composition/clips/selected/thumbnail/{last-updated}:
    parameters:
    - name: last-updated
      in: path
      description: Last updated timestamp for the clip thumbnail. If given, must match the timestamp of the current thumbnail.
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - clip
      summary: Retrieve the latest thumbnail belonging to the selected clip
      description: Finds the selected clip and retrieves the thumbnail if the thumbnail was last updated at the given timestamp
      operationId: get_last_clip_thumbnail_by_timestamp
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        404:
          description: The requested layer or clip does not exist, or the timestamp does not match last update
          content: {}
  /composition/clips/by-id/{clip-id}/thumbnail:
    parameters:
    - name: clip-id
      in: path
      description: The unique clip id to get the thumbnail for
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - clip
      summary: Retrieve the latest thumbnail belonging to the specified clip
      description: Finds the clip with the given unique id and retrieves the latest thumbnail
      operationId: list_clip_thumbnail_by_id
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        404:
          description: The requested clip does not exist or the timestamp does not match last update
          content: {}
    post:
      tags:
      - clip
      summary: Set a custom thumbnail for the clip by id
      description: Finds the clip with the specified id in the grid and sets the thumbnail
      operationId: set_clip_thumbnail_by_id
      requestBody:
        description: |
          The path to the file, in URL format. Right now only the `file` protocol is supported. Special characters
          are to be encoded using URL-encoding. As an example, to open a thumbnail with path `/Users/Resolume/thumbnail 1.png`
          you'd use an URL like `file:///Users/Resolume/thumbnail%201.png`. On Windows id'd be something like
          `file:///C:/Users/Resolume/thumbnail%201.png`. Note that three forward slashes are needed after the `file:` part,
          even on Windows. The thumbnail file must be in gif, png or jpg format.
        content:
          text/plain:
            schema:
              type: string
            examples:
              mac-open-file:
                value: "file:///Users/Resolume/thumbnail%201.gif"
              windows-open-file:
                value: "file:///C:/Users/Resolume/thumbnail%201.png"
              windows-open-unc:
                value: "file://nas-hostname/Resolume/thumbnail%201.jpg"
              open-video-source:
                value: "source:///video/Checkered"
              open-video-source-preset:
                value: "source:///video/Checkered/12345"
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: The image data to set as thumbnail
                  type: string
                  format: binary
            encoding:
              file:
                contentType: image/png, image/jpeg, image/gif
      x-codegen-request-body-name: clip-file-thumbnail
      responses:
        204:
          description: OK
        400:
          description: The given clip URL is invalid
          content: {}
        404:
          description: Requested clip not found
          content: {}
        412:
          description: A precondition failed, the thumbnail cannot be loaded
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
    delete:
      tags:
      - clip
      summary: Revert thumbnail to default for the clip by id
      description: Undo any custom thumbnail selection and revert to the auto-generated thumbnail
      operationId: revert_clip_thumbnail_by_id
      responses:
        204:
          description: OK
        404:
          description: Requested clip not found
          content: {}
        412:
          description: A precondition failed, i.e. the composition is locked
          content:
            text/plain:
              schema:
                type: string
                example: the clip cannot be changed currently
  /composition/clips/by-id/{clip-id}/thumbnail/{last-updated}:
    parameters:
    - name: clip-id
      in: path
      description: The unique clip id to get the thumbnail for
      required: true
      schema:
        type: integer
        format: int64
    - name: last-updated
      in: path
      description: Last updated timestamp for the clip thumbnail. If given, must match the timestamp of the current thumbnail.
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - clip
      summary: Retrieve the latest thumbnail belonging to the specified clip
      description: Finds the clip with the given unique id and retrieves the thumbnail if the thumbnail was last updated at the given timestamp
      operationId: get_clip_thumbnail_by_id_and_timestamp
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        404:
          description: The requested clip does not exist or the timestamp does not match last update
          content: {}
  /composition/thumbnail/dummy:
    get:
      tags:
      - clip
      summary: Explicitly retrieve the dummy thumbnails used for clips without a thumbnail
      description: This retrieves the dummy thumbnail that is also used for clips that do not yet have a thumbnail. This is a convenient
                   endpoint for clips when you already know they will not have a clip attached. Clips without thumbnail will have their
                   `last_update` property set to "0". This call always returns the exact same result and it may be cached indefinitely.
      operationId: list_dummy_thumbnail
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
  /composition/effects/by-id/{effect-id}:
    parameters:
    - name: effect-id
      in: path
      description: The unique effect id to get the thumbnail for
      required: true
      schema:
        type: integer
        format: int64
    get:
      tags:
      - clip
      summary: Retrieve effect properties given their unique identifier
      description: Finds the effect in any clip belonging to the composition
      operationId: get_effect_by_id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AudioEffect'
                  - $ref: '#/components/schemas/VideoEffect'
        404:
          description: The requested effect does not exist
          content: {}
    put:
      tags:
      - clip
      summary: Update effect by id
      description: Update a single effect
      operationId: replace_effect_by_id
      requestBody:
        description: The updated effect properties
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AudioEffect'
                - $ref: '#/components/schemas/VideoEffect'
        required: true
      responses:
        204:
          description: OK
        400:
          description: The input JSON cannot be deserialized or contains incompatible data
          content: {}
        404:
          description: The requested effect does not exist
          content: {}
components:
  schemas:
    ProductInfo:
      description: Generic information about the product serving the api
      type: object
      properties:
        name:
          description: The product name. This is either 'Arena' or 'Avenue'
          type: string
          example: Arena
        major:
          description: The major version number of the Arena or Avenue instance handling the request.
          type: integer
          format: int64
          example: 7
        minor:
          description: The minor version number of the Arena or Avenue instance handling the request.
          type: integer
          format: int64
          example: 8
        micro:
          description: The micro version number of the Arena or Avenue instance handling the request.
          type: integer
          format: int64
          example: 0
        revision:
          description: The revision of the Arena or Avenue instance handling the request.
          type: integer
          format: int64
    ParameterView:
      description: Semantic information on the parameter, contains hints about how best to display the parameter
      type: object
      readOnly: true
      properties:
        suffix:
          description: The suffix to display for the variable. May be empty
          type: string
          example: '%'
        step:
          description: Value increments to be used for e.g. sliding or rotary controls
          type: number
          format: double
          example: 1.0
        multiplier:
          description: Value to multiply with when displaying value. For a parameter with a value between 0 and 1 should display as 0 to 100
          type: number
          format: double
          example: 1.0
        display_units:
          description: Which units to display.
          type: string
          enum: [real, integer, percent, degrees, decibels, frames_per_second, milliseconds, seconds, beats, fractions]
        control_type:
          description: Which control to show for the parameter
          type: string
          enum: [based_on_param, choice_buttons, choice_combobox, spinner, duration_spinner, slider, slider_color_red, slider_color_green, slider_color_blue, slider_color_hue, slider_color_saturation, slider_color_brightness, slider_color_alpha, slider_color_opacity, color_pallette, color_picker, rotary, text, text_multiline]
    BooleanParameter:
      description: A parameter containing a true or false value
      type: object
      properties:
        id:
          description: The unique identifier of the parameter
          type: integer
          format: int64
          example: 1648023491239
        valuetype:
          description: The parameter type. This is "ParamBoolean" for this type
          type: string
          example: "ParamBoolean"
        value:
          description: The value for the parameter
          type: boolean
        view:
          $ref: '#/components/schemas/ParameterView'
    ChoiceParameter:
      description: A multiple-choice parameter
      type: object
      properties:
        id:
          description: The unique identifier of the parameter
          type: integer
          format: int64
          example: 1673448923421
        valuetype:
          description: The parameter type. This is "ParamChoice" or "ParamState" for this type
          type: string
          example: ParamChoice
        value:
          description: The value of the selected option
          type: string
          example: Option 1
        index:
          description: The index of the selected option within the options
          type: integer
          format: int32
          example: 0
        options:
          description: The list of available options for the parameter
          type: array
          items:
            type: string
          example: ["Option 1", "Option 2", "Option 3"]
        view:
          $ref: '#/components/schemas/ParameterView'
    ColorParameter:
      description: A parameter containing color data
      type: object
      properties:
        id:
          description: The unique identifier of the parameter
          type: integer
          format: int64
          example: 1682459812085
        valuetype:
          description: The parameter type. This is "ParamColor" for this type
          type: string
          example: ParamColor
        value:
          description:
            The color value. This always starts with a '#', followed by a number
            of hexadecimal values representing rgb and - optionally - the alpha
            channel. Each channel may be either represented by a single character -
            in which case the values are from 0 to 15 - or by two characters -
            allowing a range from 0 to 255 per channel.
          type: string
          example: "#ffffff"
        palette:
          description: Array of colors
          type: array
          items:
            type: string
          example: ["#ffffff", "#ff00ff", "#000"]
        view:
          $ref: '#/components/schemas/ParameterView'
    EventParameter:
      description: A parameter that handles events, but does not contain a value
      type: object
      properties:
        id:
          description: The unique identifier of the parameter
          type: integer
          format: int64
          example: 1865335878211
          readOnly: true
        valuetype:
          description: The parameter type. This is "ParamEvent" for this type
          type: string
          example: ParamEvent
          readOnly: true
        view:
          $ref: '#/components/schemas/ParameterView'
    IntegerParameter:
      description: A parameter containing numeric data
      type: object
      properties:
        id:
          description: The unique identifier of the parameter
          type: integer
          format: int64
          example: 1723491095783
        valuetype:
          description: The parameter type. This is "ParamNumber" for this type
          type: string
          example: ParamNumber
        value:
          description: The value for the parameter
          type: integer
          format: int64
          example: 100
        view:
          $ref: '#/components/schemas/ParameterView'
    RangeParameter:
      description: A parameter containing a floating-point value with a minimum
        and maximum allowed value.
      type: object
      properties:
        id:
          description: The unique identifier of the parameter
          type: integer
          format: int64
          example: 1824357891293
        valuetype:
          description: The parameter type. This is "ParamRange" for this type
          type: string
          example: ParamRange
        min:
          description: The lowest allowed value for the parameter, inclusive
          type: number
          format: double
          example: 0.0
        max:
          description: The highest allowed value for the parameter, inclusive
          type: number
          format: double
          example: 100.0
        in:
          description: The lowest value we clamped the range to, inclusive
          type: number
          format: double
          example: 25.0
        out:
          description: The highest value we clamped the range to, inclusive
          type: number
          format: double
          example: 75.0
        value:
          description: The value for the parameter
          type: number
          format: double
          example: 50.0
        view:
          $ref: '#/components/schemas/ParameterView'
    StringParameter:
      description: A parameter containing string data
      type: object
      properties:
        id:
          description: The unique identifier of the parameter
          type: integer
          format: int64
          example: 1641335430527
        valuetype:
          description: The parameter type. This is "ParamString" for this type
          type: string
          example: ParamString
        value:
          description: The value for the parameter
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
    TextParameter:
      description: A parameter containing string data, possibly multiline
      type: object
      properties:
        id:
          description: The unique identifier of the parameter
          type: integer
          format: int64
          example: 1638334400287
        valuetype:
          description: The parameter type. This is "ParamText" for this type
          type: string
          example: ParamText
        value:
          description: The value for the parameter
          example: |
            Some
            Multiline
            String
        view:
          $ref: '#/components/schemas/ParameterView'
    ResetParameter:
      description: Options for resetting a parameter, should only the value be reset, or should animations also be reset
      type: object
      properties:
        resetanimation:
          description: If set to true, animations are also reset
          type: boolean
    ParameterCollection:
      description: An unstructured collection of parameters. Parameters are presented as a map where
        the key is the name of the parameter and the value is the parameter itself. Parameters may be
        any valid parameter type.
      type: object
      additionalProperties:
        oneOf:
          - $ref: '#/components/schemas/StringParameter'
          - $ref: '#/components/schemas/TextParameter'
          - $ref: '#/components/schemas/BooleanParameter'
          - $ref: '#/components/schemas/IntegerParameter'
          - $ref: '#/components/schemas/ColorParameter'
          - $ref: '#/components/schemas/RangeParameter'
          - $ref: '#/components/schemas/ChoiceParameter'
    AudioEffect:
      description: An audioeffect represents a single effect in a chain of effects to be applied to
        a source. Properties on the audioeffect control how and what is rendered in the effect.
      type: object
      properties:
        id:
          description: The unique id of the audio effect instance
          type: integer
          format: int64
          readOnly: true
        name:
          description: The name of the effect
          type: string
          example: Distortion
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        params:
          $ref: '#/components/schemas/ParameterCollection'
    VideoEffect:
      description: A videoeffect represents a single effect in a chain of effects to be applied to
        a source. Properties on the videoeffect control how and what is rendered in the effect.
      type: object
      properties:
        id:
          description: The unique id of the video effect instance
          type: integer
          format: int64
          example: 1723069642348
          readOnly: true
        name:
          description: The unique name of the key
          type: string
          example: ChromaKey
        display_name:
          description: The name to show the user
          type: string
          example: ChromaKey
        bypassed:
          allOf:
            - $ref: '#/components/schemas/BooleanParameter'
            - description: Bypassed param is not always available, primary Transform for example is not allowed to by bypassed
            - nullable: true
        mixer:
          $ref: '#/components/schemas/ParameterCollection'
        params:
          $ref: '#/components/schemas/ParameterCollection'
        effect:
          $ref: '#/components/schemas/ParameterCollection'
    AudioFileInfo:
      description: Meta information for an audio file
      type: object
      readOnly: true      
      nullable: true
      properties:
        path:
          description: The location of the file on disk
          type: string
          example: /Users/Resolume/Music/Track1.wav
        exists:
          description: Whether file is actully present on disk at the given location
          type: boolean
          example: true
        duration:
          description: Duration of file expressed as hours:seconds:minutes:milliseconds
          type: string
          example: "00:12:08.085"
        duration_ms:
          description: Duration of file expressed as milliseconds
          type: number
          format: double
          example: 728084.8979591837
        sample_rate:
          description: Sample rate expressed in Hertz
          type: number
          format: double
          example: 44100
        num_channels:
          description: Number of audio channels
          type: integer
          format: int32
          example: 2
        bpm:
          description: Bpm rate expressed in beats
          type: number
          format: double
          example: 0
    AudioTrack:
      description: An audio track, as part of a clip,layer,group or a composition
      type: object
      nullable: true
      properties:
        volume:
          $ref: '#/components/schemas/RangeParameter'
        pan:
          $ref: '#/components/schemas/RangeParameter'
        effects:
          description: All the effects that may be applied when the audio track is played
          type: array
          items:
            $ref: '#/components/schemas/AudioEffect'
    AudioTrackClip:
      allOf:
        - $ref: '#/components/schemas/AudioTrack'
        - type: object
          properties:
            description:
              description: The description of the source belonging to this audio track
              type: string
            fileinfo:
              $ref: '#/components/schemas/AudioFileInfo'
    AutoPilot:
      description: AutoPilot options to control automatic clip transitions
      type: object
      nullable: true
      properties:
        target:
          $ref: '#/components/schemas/ChoiceParameter'
    TransportBPMSync:
      description: The timeline transport controls
      type: object
      nullable: true
      properties:
        position:
          $ref: '#/components/schemas/RangeParameter'
        controls:
          description: BPM Sync controls
          type: object
          nullable: false
          properties:
            playdirection:
              $ref: '#/components/schemas/ChoiceParameter'
            playmode:
              $ref: '#/components/schemas/ChoiceParameter'
            playmodeaway:
              $ref: '#/components/schemas/ChoiceParameter'
            duration:
              $ref: '#/components/schemas/RangeParameter'
            speed:
              $ref: '#/components/schemas/RangeParameter'
            bpm:
              $ref: '#/components/schemas/RangeParameter'
            syncmode:
              $ref: '#/components/schemas/ChoiceParameter'
            beatloop:
              $ref: '#/components/schemas/ChoiceParameter'
    TransportTimeline:
      description: The timeline transport controls
      type: object
      nullable: true
      properties:
        position:
          $ref: '#/components/schemas/RangeParameter'
        controls:
          description: Timeline controls
          type: object
          nullable: false
          properties:
            playdirection:
              $ref: '#/components/schemas/ChoiceParameter'
            playmode:
              $ref: '#/components/schemas/ChoiceParameter'
            playmodeaway:
              $ref: '#/components/schemas/ChoiceParameter'
            duration:
              $ref: '#/components/schemas/RangeParameter'
            speed:
              $ref: '#/components/schemas/RangeParameter'
    Clip:
      type: object
      description: A single clip in the composition, which may contain a video and/or audio track
      properties:
        id:
          description: The unique id of the clip
          type: integer
          format: int64
          example: 1641549604745
          readOnly: true
        name:
          $ref: '#/components/schemas/StringParameter'
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        selected:
          description: Get whether the clip is currently selected. If a clip is selected the properties
            will show up in Arena or Avenue and in the example react application.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BooleanParameter'
        connected:
          description: Get whether the clip is currently connected.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/ChoiceParameter'
        target:
          $ref: '#/components/schemas/ChoiceParameter'
        triggerstyle:
          $ref: '#/components/schemas/ChoiceParameter'
        ignorecolumntrigger:
          $ref: '#/components/schemas/ChoiceParameter'
        faderstart:
          $ref: '#/components/schemas/ChoiceParameter'
        beatsnap:
          $ref: '#/components/schemas/ChoiceParameter'
        transporttype:
          $ref: '#/components/schemas/ChoiceParameter'
        transport:
          description: Only Timeline and BPM Sync transport types are supported at the moment
          oneOf:
            - $ref: '#/components/schemas/TransportTimeline'
            - $ref: '#/components/schemas/TransportBPMSync'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        audio:
          $ref: '#/components/schemas/AudioTrackClip'
        video:
          $ref: '#/components/schemas/VideoTrackClip'
        thumbnail:
          description: The thumbnail properties contain information with the latest update to
            the thumbnail, the size (in bytes) and whether it contains the 'default' thumbnail,
            meaning it doesn't contain a video or audio track
          type: object
          readOnly: true
          properties:
            size:
              description: The number of bytes of data in the thumbnail
              type: integer
              example: 1048576
              format: int64
            last_update:
              description: The timestamp of the last update, in milliseconds. Given as a string
                to prevent lesser languages from truncating the value
              type: string
              example: "0"
            is_default:
              description: Get whether this is a default thumbnail, shared between all clips that
                don't have any video or audio tracks
              type: boolean
              example: true
    Column:
      type: object
      description: A column within a deck
      properties:
        id:
          description: The unique identifier of the column
          type: integer
          format: int64
          example: 1641549605447
          readOnly: true
        name:
          $ref: '#/components/schemas/StringParameter'
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        connected:
          description: Get whether the column is currently connected
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/ChoiceParameter'
        selected:
          description: Get whether the column is currently selected
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BooleanParameter'
    CrossFader:
      description: Cross fade between two clips
      type: object
      nullable: false
      properties:
        id:
          description: The unique identifier of the cross fader
          type: integer
          format: int64
          example: 1
          readOnly: true
        phase:
          $ref: '#/components/schemas/RangeParameter'
        behaviour:
          $ref: '#/components/schemas/ChoiceParameter'
        curve:
          $ref: '#/components/schemas/ChoiceParameter'
        sidea:
          $ref: '#/components/schemas/EventParameter'
        sideb:
          $ref: '#/components/schemas/EventParameter'
        mixer:
          $ref: '#/components/schemas/ParameterCollection'
    Deck:
      type: object
      description: A deck contains a full set of layers and clips. Only the layers and clips of the
        active deck can be retrieved and updated.
      properties:
        id:
          description: The unique identifier of the deck
          type: integer
          format: int64
          example: 1641549604727
          readOnly: true
        closed:
          description: Is this deck closed
          type: boolean
          example: false
          readOnly: true
        name:
          $ref: '#/components/schemas/StringParameter'
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        selected:
          description: Get whether the deck is currently selected
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BooleanParameter'
        scrollx:
          $ref: '#/components/schemas/IntegerParameter'
    Effect:
      description: An effect to be used on a clip. layer (group) or the composition
      type: object
      properties:
        idstring:
          description: The unique identifier for the effect
          type: string
          example: A139
        name:
          description: The descriptive name of the source
          type: string
          example: Blow
        presets:
          description: All the presets for this source
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 2026888427
                description: The unique identifier for the preset
              name:
                type: string
                example: Bright Lines
                description: The name of the preset
    Effects:
      description: The available effects for clips, layer (group)s and the composition
      type: object
      properties:
        video:
          description: The available video effects
          type: array
          items:
            $ref: '#/components/schemas/Effect'
    FrameRate:
      description: Frame rate expressed as ratio
      type: object
      readOnly: true
      properties:
        num:
          description: Numerator
          type: integer
          format: int32
          example: 24000
        denom:
          description: Denominator
          type: integer
          format: int32
          example: 1001
    Source:
      description: A source to be used in a clip
      type: object
      properties:
        idstring:
          description: The unique identifier for the source
          type: string
          example: A401
        name:
          description: The descriptive name of the source
          type: string
          example: Gradient
        presets:
          description: All the presets for this source
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 2026883901
                description: The unique identifier for the preset
              name:
                type: string
                example: Dutch Sky
                description: The name of the preset
    Sources:
      description: The available sources for clips
      type: object
      properties:
        video:
          description: The available video sources
          type: array
          items:
            $ref: '#/components/schemas/Source'
    VideoFileInfo:
      description: Meta information for a video file
      type: object
      readOnly: true
      nullable: true
      properties:
        path:
          description: The location of the file on disk
          type: string
          example: /Users/Resolume/Videos/Clip1.mov
        exists:
          description: Whether file is actually present on disk at the given location
          type: boolean
          example: true
        duration:
          description: Duration of file expressed as hours:seconds:minutes:milliseconds
          type: string
          example: "00:00:19.06"
        duration_ms:
          description: Duration of file expressed as milliseconds
          type: number
          format: double
          example: 19269.249999999996
          readOnly: true
        framerate:
          $ref: '#/components/schemas/FrameRate'
        width:
          description: The number of pixels the video is wide
          type: integer
          format: int32
          example: 1920
        height:
          description: The number of pixels the video is high
          type: integer
          format: int32
          example: 1080
    LayerTransition:
      description: A layer transition describes the transition between clips within the layer
      type: object
      properties:
        duration:
          $ref: '#/components/schemas/RangeParameter'
        blend_mode:
          $ref: '#/components/schemas/ChoiceParameter'
    VideoTrack:
      description: A video track, as part of a clip,layer,group or a composition
      type: object
      nullable: true
      properties:
        width:
          $ref: '#/components/schemas/RangeParameter'
        height:
          $ref: '#/components/schemas/RangeParameter'
        opacity:
          $ref: '#/components/schemas/RangeParameter'
        mixer:
          $ref: '#/components/schemas/ParameterCollection'
        effects:
          description: All the effects that may be applied when the video track is played
          type: array
          items: 
            $ref: '#/components/schemas/VideoEffect'
    VideoTrackLayer:
      allOf:
        - $ref: '#/components/schemas/VideoTrack'
        - type: object
          properties:
            autosize:
              $ref: '#/components/schemas/ChoiceParameter'
    VideoTrackClip:
      allOf:
        - $ref: '#/components/schemas/VideoTrack'
        - type: object
          properties:
            description:
              description: The description of the source belonging to this video track
              type: string
              example: Clip1.mov\nDXV 3.0 Normal Quality, With Alpha, 1920x1080, 23.98 Fps\r\n00:00:19.269
            fileinfo:
              $ref: '#/components/schemas/VideoFileInfo'
            resize:
              $ref: '#/components/schemas/ChoiceParameter'
            r:
              $ref: '#/components/schemas/BooleanParameter'
            g:
              $ref: '#/components/schemas/BooleanParameter'
            b:
              $ref: '#/components/schemas/BooleanParameter'
            a:
              $ref: '#/components/schemas/BooleanParameter'
            sourceparams:
              allOf:
                - $ref: '#/components/schemas/ParameterCollection'
                - description: Additional params for source of the clip
                - nullable: true
    TempoController:
      description: The controller for various tempo-related aspects of the composition
      type: object
      properties:
        tempo:
          $ref: '#/components/schemas/RangeParameter'
        tempo_pull:
          $ref: '#/components/schemas/EventParameter'
        tempo_push:
          $ref: '#/components/schemas/EventParameter'
        tempo_tap:
          $ref: '#/components/schemas/EventParameter'
        resync:
          $ref: '#/components/schemas/EventParameter'
    Layer:
      description: A layer is a container for clips that has its own dashboard and can be selected
      type: object
      properties:
        id:
          description: The unique id for the layer
          type: integer
          format: int64
          example: 1641549604807
          readOnly: true
        name:
          $ref: '#/components/schemas/StringParameter'
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        selected:
          description: Get whether the layer is currently selected
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BooleanParameter'
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        solo:
          $ref: '#/components/schemas/BooleanParameter'
        crossfadergroup:
          $ref: '#/components/schemas/ChoiceParameter'
        master:
          $ref: '#/components/schemas/RangeParameter'
        maskmode:
          $ref: '#/components/schemas/ChoiceParameter'
        ignorecolumntrigger:
          $ref: '#/components/schemas/BooleanParameter'
        faderstart:
          $ref: '#/components/schemas/BooleanParameter'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        audio:
          $ref: '#/components/schemas/AudioTrack'
        video:
          $ref: '#/components/schemas/VideoTrackLayer'
        transition:
          $ref: '#/components/schemas/LayerTransition'
        clips:
          description: All clips belonging to this layer
          type: array
          items: 
            $ref: '#/components/schemas/Clip'
        autopilot:
          $ref: '#/components/schemas/AutoPilot'
    LayerGroup:
      description: A collection of layers, allowing controlling of a group of layers as a single object
      type: object
      properties:
        id:
          description: The unique id for the layer group
          type: integer
          format: int64
          example: 1641549604808
          readOnly: true
        name:
          $ref: '#/components/schemas/StringParameter'
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        selected:
          description: Get whether the layer group is currently selected
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BooleanParameter'
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        solo:
          $ref: '#/components/schemas/BooleanParameter'
        crossfadergroup:
          $ref: '#/components/schemas/ChoiceParameter'
        master:
          $ref: '#/components/schemas/RangeParameter'
        speed:
          $ref: '#/components/schemas/RangeParameter'
        ignorecolumntrigger:
          $ref: '#/components/schemas/BooleanParameter'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        audio:
          $ref: '#/components/schemas/AudioTrack'
        video:
          $ref: '#/components/schemas/VideoTrack'
        layers:
          description: All the layers added to the layer group
          type: array
          items:
            $ref: '#/components/schemas/Layer'
    Composition:
      description: The complete composition, containing all the decks, layers, clips and their effects
      type: object
      properties:
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
            - $ref: '#/components/schemas/BooleanParameter'
            - readOnly: true
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        master:
          $ref: '#/components/schemas/RangeParameter'
        speed:
          $ref: '#/components/schemas/RangeParameter'
        cliptarget:
          $ref: '#/components/schemas/ChoiceParameter'
        cliptriggerstyle:
          $ref: '#/components/schemas/ChoiceParameter'
        clipbeatsnap:
          $ref: '#/components/schemas/ChoiceParameter'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        audio:
          $ref: '#/components/schemas/AudioTrack'
        video:
          $ref: '#/components/schemas/VideoTrack'
        crossfader:
          $ref: '#/components/schemas/CrossFader'
        decks:
          description: All decks in the composition
          type: array
          items:
            $ref: '#/components/schemas/Deck'
        layers:
          description: All layers in the composition
          type: array
          items:
            $ref: '#/components/schemas/Layer'
        columns:
          description: All columns in the composition
          type: array
          items:
            $ref: '#/components/schemas/Column'
        layergroups:
          description: All layergroups in the composition
          type: array
          items:
            $ref: '#/components/schemas/LayerGroup'
        tempo_controller:
          $ref: '#/components/schemas/TempoController'
